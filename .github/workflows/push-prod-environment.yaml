name: Build images from latest master branch

on:
  push:
    tags:
      - v*

jobs:
  publish:
    name: build and deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build new images and push
        run: |
          make \
            build-docker-images \
            push-docker-images
        env:
          # webapp
          PORT: 3000
          NEXT_PUBLIC_TAG: ${{ github.ref }}
          NEXT_PUBLIC_NAME: "edenia_boilerplate"
          NEXT_PUBLIC_TITLE: "Credential Verifier"
          NEXT_PUBLIC_LOGO: "https://raw.githubusercontent.com/edenia/.github/master/.github/workflows/images/edenia-logo.png"
          NEXT_PUBLIC_FOOTER_LINKS: "[]"
          NEXT_PUBLIC_HASURA_URL: "https://polygonid-graphql.edenia.cloud/v1/graphql"

      - name: Build kubernetes files
        id: build_kubernetes_files
        run: |
          make \
            build-kubernetes
        env:
          # general
          NAMESPACE: boilerplate
          INGRESS_HOST: boilerplate.edenia.cloud
          INGRESS_GRAPHQL_HOST: graphql-boilerplate.edenia.cloud
          # Postgres
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_DATA: ${{ secrets.POSTGRES_DATA }}
          # hapi
          HAPI_SERVER_PORT: 9090
          HAPI_SERVER_ADDRESS: 0.0.0.0
          HAPI_HASURA_URL: ${{ secrets.HAPI_HASURA_URL }}
          HAPI_HASURA_ADMIN_SECRET: ${{ secrets.HAPI_HASURA_ADMIN_SECRET }}
          HAPI_HOST_DOMAIN: ${{ secrets.HAPI_HOST_DOMAIN }}
          HAPI_POLYGON_NETWORK: "main"
          HAPI_ISSUER_PUBLIC_KEY: ${{ secrets.HAPI_ISSUER_PUBLIC_KEY }}
          HAPI_CONTRACT_ADDRESS: ${{ secrets.HAPI_CONTRACT_ADDRESS }}
          HAPI_RPC_URL: ${{ secrets.HAPI_RPC_URL }}
          HAPI_ALCHEMY_KEY: ${{ secrets.HAPI_ALCHEMY_KEY }}
          HAPI_IPFS_NODE_URL: "https://ipfs.io"
          HAPI_PROOF_REQUEST: ${{ secrets.HAPI_PROOF_REQUEST }}
          # hasura
          HASURA_GRAPHQL_ENABLE_CONSOLE: true
          HASURA_GRAPHQL_DATABASE_URL: ${{ secrets.HASURA_GRAPHQL_DATABASE_URL }}
          HASURA_GRAPHQL_ADMIN_SECRET: ${{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}
          HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${{ secrets.HASURA_GRAPHQL_UNAUTHORIZED_ROLE }}
          HASURA_GRAPHQL_ACTION_BASE_URL: ${{ secrets.HASURA_GRAPHQL_ACTION_BASE_URL }}

      - name: Deploy kubernetes files
        uses: steebchen/kubectl@v1.1.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          NAMESPACE: boilerplate
          K8S_BUILD_DIR: build_k8s
        with:
          args: version && make deploy-kubernetes

      - name: Create Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
